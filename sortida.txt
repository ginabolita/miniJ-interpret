(root (stat parell =: (funcDefinition 0 = ] @: 2 | ])))
[D]: Stored function 'parell' with operators ['0', '=', ']', '@:', '2', '|', ']']
['0', '=', ']', '@:', '2', '|', ']']
(root (stat (expr parell (expr i. (expr (numlist 6))))))
[D]: Visiting function
[D]: Function definition for 'parell': ['0', '=', ']', '@:', '2', '|', ']']
[D]: Added numeric value to val_stack from function definition: 0
[D]: Added operator to op_stack: =
[D]: Added operator to op_stack: ]
[D]: Added operator to op_stack: @:
[D]: Added numeric value to val_stack from function definition: 2
[D]: Added operator to op_stack: |
[D]: Added operator to op_stack: ]
[D]: Function 'parell' called with arguments: [array([0, 1, 2, 3, 4, 5])]
[D]: Initial stacks - Operators: ['=', ']', '@:', '|', ']'], Values: [0, 2, array([0, 1, 2, 3, 4, 5])]
[D]: Evaluating with stacks - Operators: ['=', ']', '@:', '|', ']'], Values: [0, 2, array([0, 1, 2, 3, 4, 5])]
[D]: Current operator stack: ['=', ']', '@:', '|', ']']
[D]: Current value stack: [0, 2, array([0, 1, 2, 3, 4, 5])]
[D]: Applying unary operation ']' on value: [0 1 2 3 4 5]
[D]: Result after unary operation: [0 1 2 3 4 5]
[D]: Current operator stack: ['=', ']', '@:', '|']
[D]: Current value stack: [0, 2, array([0, 1, 2, 3, 4, 5])]
[D]: Applying binary operation '|' on values: 2, [0 1 2 3 4 5]
[D]: Result after binary operation: [0, 1, 0, 1, 0, 1]
[D]: Current operator stack: ['=', ']', '@:']
[D]: Current value stack: [0, [0, 1, 0, 1, 0, 1]]
[D]: Applying binary operation '@:' on values: 0, [0, 1, 0, 1, 0, 1]
