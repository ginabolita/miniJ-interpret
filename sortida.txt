[D]: Processing child '*:' in function definition
[D]: Stored function 'square' with operators: {'square': array(['*:'], dtype='<U2')}
[D]: Initial stacks - Operators: ['*:'], Values: [[1, 2, 3]]
1 4 9
[D]: Processing child '2' in function definition
[D]: Processing child '|' in function definition
[D]: Processing child ']' in function definition
[D]: Stored function 'mod2' with operators: {'square': array(['*:'], dtype='<U2'), 'mod2': array(['2', '|', ']'], dtype='<U1')}
[D]: Processing child '0' in function definition
[D]: Processing child '=' in function definition
[D]: Processing child ']' in function definition
[D]: Stored function 'eq0' with operators: {'square': array(['*:'], dtype='<U2'), 'mod2': array(['2', '|', ']'], dtype='<U1'), 'eq0': array(['0', '=', ']'], dtype='<U1')}
[D]: Initial stacks - Operators: ['|', ']'], Values: [2, array([0, 1, 2, 3, 4, 5])]
[D]: Initial stacks - Operators: ['=', ']'], Values: [0, [0, 1, 0, 1, 0, 1]]
1 0 1 0 1 0
[D]: Initial stacks - Operators: ['=', ']', '|', ']'], Values: [0, 2, array([0, 1, 2, 3, 4, 5])]
1 0 1 0 1 0
[D]: Processing child '0' in function definition
[D]: Processing child '=' in function definition
[D]: Processing child ']' in function definition
[D]: Processing child '@:' in function definition
[D]: Processing child '2' in function definition
[D]: Processing child '|' in function definition
[D]: Processing child ']' in function definition
[D]: Stored function 'parell' with operators: {'square': array(['*:'], dtype='<U2'), 'mod2': array(['2', '|', ']'], dtype='<U1'), 'eq0': array(['0', '=', ']'], dtype='<U1'), 'parell': array(['0', '=', ']', '2', '|', ']'], dtype='<U1')}
[D]: Initial stacks - Operators: ['=', ']', '|', ']'], Values: [0, 2, array([0, 1, 2, 3, 4, 5])]
1 0 1 0 1 0
